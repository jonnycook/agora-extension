// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(['jQuery', 'Background', './WebappContentScript'], function($, Background, WebappContentScript) {
  var WebappBackground;
  return WebappBackground = (function(superClass) {
    extend(WebappBackground, superClass);

    function WebappBackground(type) {
      this.type = type != null ? type : 'webapp';
      WebappBackground.__super__.constructor.apply(this, arguments);
    }

    WebappBackground.prototype.getStyles = function(cb) {
      if (env.stylesheet) {
        return $.get(env.root + "/resources/stylesheets/webapp." + env.stylesheet + ".css", cb);
      } else {
        return $.get(env.root + "/resources/stylesheets/webapp.css", cb);
      }
    };

    WebappBackground.prototype.clientLibsPath = function() {
      return env.root + '/libs/client/merged.js';
    };

    WebappBackground.prototype.onRequest = function(handler) {
      return this.requestHandler = handler;
    };

    WebappBackground.prototype.sendRequest = function(tabId, request, response) {
      var i, len, listener, ref, results;
      if (this.csListeners) {
        ref = this.csListeners;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          listener = ref[i];
          results.push(listener(request, {}, response));
        }
        return results;
      }
    };

    WebappBackground.prototype.addContentScriptListener = function(listener) {
      if (this.csListeners == null) {
        this.csListeners = [];
      }
      return this.csListeners.push(listener);
    };

    WebappBackground.prototype.contentScript = function() {
      return WebappContentScript;
    };

    WebappBackground.prototype.httpRequest = function(url, opts) {
      return $.ajax(url, {
        data: opts.data,
        success: opts.cb,
        dataType: opts.dataType,
        error: function(error) {
          return console.log(arguments);
        }
      });
    };

    WebappBackground.prototype.require = function(modules, cb) {
      return require(modules, cb);
    };

    WebappBackground.prototype.setTimeout = function(cb, duration) {
      return setTimeout(cb, duration);
    };

    WebappBackground.prototype.clearTimeout = function(id) {
      return clearTimeout(id);
    };

    WebappBackground.prototype.setInterval = function(func, time) {
      return setInterval(func, time);
    };

    WebappBackground.prototype.clearInterval = function(id) {
      return clearInterval(id);
    };

    WebappBackground.prototype.getValue = function(name) {
      return window[name];
    };

    WebappBackground.prototype.setValue = function(name, value) {
      return window[name] = value;
    };

    WebappBackground.prototype.defaultValue = function(name, value) {
      return window[name] != null ? window[name] : window[name] = value;
    };

    WebappBackground.prototype.getCookie = function(domain, name, cb) {
      return cb();
    };

    WebappBackground.prototype.getResourceUrl = function(resource) {
      return "/view/" + resource;
    };

    WebappBackground.prototype.storage = {};

    WebappBackground.prototype.getStorage = function(fields, cb) {
      return cb(this.storage);
    };

    WebappBackground.prototype.setStorage = function(values) {
      var field, results, value;
      results = [];
      for (field in values) {
        value = values[field];
        results.push(this.storage[field] = value);
      }
      return results;
    };

    WebappBackground.prototype.removeStorage = function(fields) {
      var field, i, len, results;
      results = [];
      for (i = 0, len = fields.length; i < len; i++) {
        field = fields[i];
        results.push(delete this.storage[field]);
      }
      return results;
    };

    return WebappBackground;

  })(Background);
});

//# sourceMappingURL=WebappBackground.js.map
