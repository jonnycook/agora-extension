// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['underscore', './ClientObject', './IArray'], function(_, ClientObject, IArray) {
  var ClientArray;
  return ClientArray = (function(_super) {
    __extends(ClientArray, _super);

    function ClientArray() {
      ClientArray.__super__.constructor.apply(this, arguments);
      this._array = new IArray;
    }

    ClientArray.prototype.get = function(pos) {
      return this._array.get(pos);
    };

    ClientArray.prototype.setArray = function(array) {
      this._array.setArray(array);
      return this._triggerMutationEvent('setArray', {
        array: ClientObject.serialize(this._array)
      });
    };

    ClientArray.prototype["delete"] = function(pos) {
      this._array["delete"](pos);
      return this._triggerMutationEvent('deletion', {
        position: pos
      });
    };

    ClientArray.prototype.insert = function(el, pos) {
      this._array.insert(el, pos);
      return this._triggerMutationEvent('insertion', {
        value: ClientObject.serialize(el),
        position: pos
      });
    };

    ClientArray.prototype.move = function(from, to) {
      this._array.move(from, to);
      return this._triggerMutationEvent('movement', {
        from: from,
        to: to
      });
    };

    ClientArray.prototype.push = function(el) {
      return this.insert(el, this._array.length);
    };

    ClientArray.prototype.serialize = function() {
      var obj;
      obj = ClientArray.__super__.serialize.apply(this, arguments);
      return _.extend(obj, {
        __class__: 'ClientArray',
        _array: ClientObject.serialize(this._array)
      });
    };

    return ClientArray;

  })(ClientObject);
});

//# sourceMappingURL=ClientArray.map
