// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['scraping/SiteProduct', 'util', 'underscore'], function(SiteProduct, util, _) {
  var LandsEndProduct;
  return LandsEndProduct = (function(_super) {
    __extends(LandsEndProduct, _super);

    function LandsEndProduct() {
      return LandsEndProduct.__super__.constructor.apply(this, arguments);
    }

    LandsEndProduct.prototype.variantImage = function(variant, cb) {
      return this.product["with"]('more', (function(_this) {
        return function(more) {
          var color, _i, _len, _ref;
          _ref = more.colors;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            color = _ref[_i];
            if (color.name === variant.Color) {
              cb(more.images[color.id][0]);
              return;
            }
          }
          return cb();
        };
      })(this));
    };

    LandsEndProduct.prototype.images = function(cb) {
      return this.product["with"]('more', (function(_this) {
        return function(more) {
          var color, colorImages, image, images, _ref;
          images = {};
          _ref = more.images;
          for (color in _ref) {
            colorImages = _ref[color];
            images[color] = (function() {
              var _i, _len, _results;
              _results = [];
              for (_i = 0, _len = colorImages.length; _i < _len; _i++) {
                image = colorImages[_i];
                _results.push({
                  small: image,
                  medium: image,
                  large: image,
                  larger: image,
                  full: image
                });
              }
              return _results;
            })();
          }
          return cb(images);
        };
      })(this));
    };

    LandsEndProduct.prototype.widgets = function(cb) {
      return this.product["with"]('more', 'reviews', (function(_this) {
        return function(more, reviews) {
          var defs, name, values, widgets, _ref;
          defs = {
            description: 'Description',
            features: 'Features',
            sizes: 'Sizes'
          };
          _ref = more.properties;
          for (name in _ref) {
            values = _ref[name];
            defs[name] = {
              obj: values,
              title: name
            };
          }
          _.merge(defs, {
            colors: {
              title: 'Colors',
              map: 'name'
            },
            reviews: {
              obj: reviews,
              map: {
                review: 'content'
              }
            }
          });
          widgets = _this.genWidgets(more, defs);
          return cb(widgets);
        };
      })(this));
    };

    return LandsEndProduct;

  })(SiteProduct);
});

//# sourceMappingURL=LandsEndProduct.map
