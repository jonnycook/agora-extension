// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(['scraping/SiteProduct'], function(SiteProduct) {
  var Singer22Product;
  return Singer22Product = (function(superClass) {
    extend(Singer22Product, superClass);

    function Singer22Product() {
      return Singer22Product.__super__.constructor.apply(this, arguments);
    }

    Singer22Product.prototype.variantImage = function(variant, cb) {
      return this.product["with"]('more', (function(_this) {
        return function(more) {
          var ref;
          if (more) {
            return cb((ref = more.colorImages) != null ? ref[variant.Color].main : void 0);
          } else {
            return cb();
          }
        };
      })(this));
    };

    Singer22Product.prototype.images = function(cb) {
      return this.product["with"]('more', (function(_this) {
        return function(more) {
          var i, image, images, len, name, ref;
          images = {};
          ref = more.images;
          for (i = 0, len = ref.length; i < len; i++) {
            image = ref[i];
            if (images[name = image.color] == null) {
              images[name] = [];
            }
            images[image.color].push({
              small: image.full,
              medium: image.full,
              large: image.full,
              larger: image.full,
              full: image.full
            });
          }
          return cb(images);
        };
      })(this));
    };

    Singer22Product.prototype.widgets = function(cb) {
      return this.product["with"]('more', 'reviews', (function(_this) {
        return function(more, reviews) {
          var widgets;
          widgets = _this.genWidgets(more, {
            description: 'Description',
            sizes: 'Sizes',
            colors: 'Colors'
          });
          return cb(widgets);
        };
      })(this));
    };

    return Singer22Product;

  })(SiteProduct);
});

//# sourceMappingURL=Singer22Product.js.map
