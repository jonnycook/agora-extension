// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['scraping/SiteProduct'], function(SiteProduct) {
  var Singer22Product;
  return Singer22Product = (function(_super) {
    __extends(Singer22Product, _super);

    function Singer22Product() {
      return Singer22Product.__super__.constructor.apply(this, arguments);
    }

    Singer22Product.prototype.variantImage = function(variant, cb) {
      return this.product["with"]('more', (function(_this) {
        return function(more) {
          var _ref;
          if (more) {
            return cb((_ref = more.colorImages) != null ? _ref[variant.Color].main : void 0);
          } else {
            return cb();
          }
        };
      })(this));
    };

    Singer22Product.prototype.images = function(cb) {
      return this.product["with"]('more', (function(_this) {
        return function(more) {
          var image, images, _i, _len, _name, _ref;
          images = {};
          _ref = more.images;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            image = _ref[_i];
            if (images[_name = image.color] == null) {
              images[_name] = [];
            }
            images[image.color].push({
              small: image.full,
              medium: image.full,
              large: image.full,
              larger: image.full,
              full: image.full
            });
          }
          return cb(images);
        };
      })(this));
    };

    Singer22Product.prototype.widgets = function(cb) {
      return this.product["with"]('more', 'reviews', (function(_this) {
        return function(more, reviews) {
          var widgets;
          widgets = _this.genWidgets(more, {
            description: 'Description',
            sizes: 'Sizes',
            colors: 'Colors'
          });
          return cb(widgets);
        };
      })(this));
    };

    return Singer22Product;

  })(SiteProduct);
});

//# sourceMappingURL=Singer22Product.map
