// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(['scraping/SiteProduct', 'underscore'], function(SiteProduct, _) {
  var BestBuyProduct;
  return BestBuyProduct = (function(superClass) {
    extend(BestBuyProduct, superClass);

    function BestBuyProduct() {
      return BestBuyProduct.__super__.constructor.apply(this, arguments);
    }

    BestBuyProduct.prototype.images = function(cb) {
      return this.product["with"]('more', (function(_this) {
        return function(more) {
          var height, image, largeH, largeW, mediumH, mediumW, name, orig, otherImages, ref, ref1, size, smallH, smallW, width;
          otherImages = [];
          ref = more.images;
          for (name in ref) {
            image = ref[name];
            orig = image;
            image = image.match(/^(.*?);/)[1];
            size = orig.match(/;(.*)/)[1];
            ref1 = size.split(';'), height = ref1[0], width = ref1[1];
            height = height.match(/^canvasHeight=(.*)/)[1];
            width = width.match(/^canvasWidth=(.*)/)[1];
            smallH = Math.floor(height / 6);
            mediumH = Math.floor(height / 4);
            largeH = Math.floor(height / 2);
            smallW = Math.floor(width / 6);
            mediumW = Math.floor(width / 4);
            largeW = Math.floor(width / 2);
            otherImages.push({
              small: image + (";canvasHeight=" + smallH + ";canvasWidth=" + smallW),
              medium: orig,
              large: orig,
              larger: orig,
              full: image
            });
          }
          return cb({
            '': otherImages
          }, '');
        };
      })(this));
    };

    BestBuyProduct.prototype.widgets = function(cb) {
      return this.product["with"]('more', (function(_this) {
        return function(more) {
          var widgets;
          widgets = _this.genWidgets(more, {
            description: 'Description',
            features: 'Features',
            specifications: 'Specifications'
          });
          return cb(widgets);
        };
      })(this));
    };

    return BestBuyProduct;

  })(SiteProduct);
});

//# sourceMappingURL=BestBuyProduct.js.map
