// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(['scraping/SiteProduct', 'util'], function(SiteProduct, util) {
  var UniqloProduct;
  return UniqloProduct = (function(superClass) {
    extend(UniqloProduct, superClass);

    function UniqloProduct() {
      return UniqloProduct.__super__.constructor.apply(this, arguments);
    }

    UniqloProduct.prototype.images = function(cb) {
      return this.product["with"]('more', (function(_this) {
        return function(more) {
          var color, colorName, currentColor, i, id, image, images, j, len, len1, otherImages, ref, ref1, ref2;
          otherImages = (function() {
            var i, len, ref, results;
            ref = more.images;
            results = [];
            for (i = 0, len = ref.length; i < len; i++) {
              image = ref[i];
              results.push({
                small: image,
                medium: image,
                large: image,
                larger: image,
                full: image
              });
            }
            return results;
          })();
          images = {};
          ref = more.colors;
          for (i = 0, len = ref.length; i < len; i++) {
            color = ref[i];
            id = _this.product.get('productSid').split('-')[0];
            image = "http://uniqlo.scene7.com/is/image/UNIQLO/goods_" + color.id + "_" + id;
            images[color.name] = [
              {
                small: image,
                medium: image,
                large: image,
                larger: image,
                full: image
              }
            ].concat(otherImages);
          }
          currentColor = (ref1 = _this.product.get('productSid').split('-')) != null ? ref1[1] : void 0;
          colorName = null;
          if (currentColor) {
            ref2 = more.colors;
            for (j = 0, len1 = ref2.length; j < len1; j++) {
              color = ref2[j];
              if (currentColor === color.id) {
                colorName = color.name;
              }
            }
          }
          return cb(images, colorName);
        };
      })(this));
    };

    UniqloProduct.prototype.widgets = function(cb) {
      return this.product["with"]('more', 'reviews', (function(_this) {
        return function(more, reviews) {
          var widgets;
          widgets = _this.genWidgets(more, {
            description: 'Description',
            materials: 'Details',
            sizes: 'Sizes',
            colors: {
              title: 'Colors',
              map: function(color) {
                return color.id + " " + (util.ucfirst(color.name));
              }
            },
            reviews: {
              obj: reviews,
              map: {
                review: 'content'
              }
            }
          });
          return cb(widgets);
        };
      })(this));
    };

    return UniqloProduct;

  })(SiteProduct);
});

//# sourceMappingURL=UniqloProduct.js.map
