// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['scraping/SiteProduct', 'underscore'], function(SiteProduct, _) {
  var SearsProduct;
  return SearsProduct = (function(_super) {
    __extends(SearsProduct, _super);

    function SearsProduct() {
      return SearsProduct.__super__.constructor.apply(this, arguments);
    }

    SearsProduct.prototype.images = function(cb) {
      return this.product["with"]('more', (function(_this) {
        return function(more) {
          var image, images, name, otherImages, _ref;
          images = {};
          if (more.images.alternate) {
            otherImages = (function() {
              var _i, _len, _ref, _results;
              _ref = more.images.alternate;
              _results = [];
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                image = _ref[_i];
                _results.push({
                  small: image + '?hei=100&wid=100&op_sharpen=1',
                  medium: image + '?hei=300&wid=300&op_sharpen=1',
                  large: image + '?hei=500&wid=500&op_sharpen=1',
                  larger: image + '?hei=1000&wid=1000&op_sharpen=1',
                  full: image + '?op_sharpen=1'
                });
              }
              return _results;
            })();
          }
          _ref = more.images.colors;
          for (name in _ref) {
            image = _ref[name];
            images[name] = [
              {
                small: image + '?hei=100&wid=100&op_sharpen=1',
                medium: image + '?hei=300&wid=300&op_sharpen=1',
                large: image + '?hei=500&wid=500&op_sharpen=1',
                larger: image + '?hei=1000&wid=1000&op_sharpen=1',
                full: image + '?op_sharpen=1'
              }
            ].concat(otherImages != null ? otherImages : []);
          }
          return cb(images, more.color);
        };
      })(this));
    };

    SearsProduct.prototype.widgets = function(cb) {
      return this.product["with"]('more', (function(_this) {
        return function(more) {
          var widgets;
          widgets = _this.genWidgets(more, {
            description: 'Description',
            specifications: 'Specifications'
          });
          return cb(widgets);
        };
      })(this));
    };

    return SearsProduct;

  })(SiteProduct);
});

//# sourceMappingURL=SearsProduct.map
