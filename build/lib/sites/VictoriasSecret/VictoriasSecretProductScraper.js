// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['scraping/ProductScraper', 'scraping/resourceScrapers/PatternResourceScraper', 'scraping/resourceScrapers/ScriptedResourceScraper', 'scraping/resourceScrapers/JsonResourceScraper', 'underscore'], function(ProductScraper, PatternResourceScraper, ScriptedResourceScraper, JsonResourceScraper, _) {
  var VictoriasSecretProductScraper;
  return VictoriasSecretProductScraper = (function(_super) {
    __extends(VictoriasSecretProductScraper, _super);

    function VictoriasSecretProductScraper() {
      return VictoriasSecretProductScraper.__super__.constructor.apply(this, arguments);
    }

    VictoriasSecretProductScraper.testProducts = ['165629'];

    VictoriasSecretProductScraper.prototype.resources = {
      productPage: {
        url: function() {
          return "http://www.victoriassecret.com/panties/bikinis/-?ProductID=" + this.productSid;
        }
      }
    };

    VictoriasSecretProductScraper.prototype.properties = {
      title: {
        resource: 'productPage',
        scraper: PatternResourceScraper(new RegExp(/<meta property="og:title" content="([^"]*)/), 1)
      },
      price: {
        resource: 'productPage',
        scraper: ScriptedResourceScraper(function() {
          var dash, dashMatches, firstMatches, match, matches, orMatch, orig, price, priceMatch, priceMatches, prices, special, _i, _j, _len, _len1;
          firstMatches = this.resource.match(/<div class="price">([\S\s]*?)<div class="more">/);
          matches = firstMatches[1].match(/<p>([\S\s]*)/);
          dashMatches = matches[1].match(/([\S\s]*?)<a/);
          if (!dashMatches) {
            dashMatches = matches[1].match(/([\S\s]*?)<\/p/);
          }
          if (!dashMatches) {
            dashMatches = matches[1].match(/([\S\s]*?)<div class="more"/);
          }
          if (!dashMatches) {
            dashMatches = matches[1].match(/([\S\s]*?)<br/);
          }
          dash = dashMatches[1].match(/(-)/);
          orig = matches[1].match(/(Sale)/);
          orMatch = matches[1].match(/( or )/);
          if (dash && orig && !orMatch) {
            prices = [];
            priceMatches = matches[1].match(/Sale \$([^<]+)/g);
            for (_i = 0, _len = priceMatches.length; _i < _len; _i++) {
              match = priceMatches[_i];
              prices.push(match.match(/Sale \$([^<]+)/)[1]);
            }
            price = prices[0] + " - $" + prices[1];
          } else if (dash && orMatch && !orig) {
            prices = [];
            priceMatches = matches[1].match(/\$([^\.]+.\d\d)/g);
            for (_j = 0, _len1 = priceMatches.length; _j < _len1; _j++) {
              match = priceMatches[_j];
              prices.push(match.match(/\$([^\.]+.\d\d)/)[1]);
            }
            special = matches[1].match(/or([\S\s]*)<\//);
            special = special[1].match(/>([^<]+)/);
            price = prices[0] + " - $" + prices[1] + " or " + special[1];
          } else if (!dash && orMatch && !orig) {
            priceMatch = matches[1].match(/\$([^\.]+.\d\d)/);
            special = matches[1].match(/or([\S\s]*)<\//);
            special = special[1].match(/>([^<]+)/);
            price = priceMatch[1] + " or " + special[1];
          } else if (orig && !dash && !orMatch) {
            priceMatches = matches[1].match(/Sale \$([^<]+)/);
            price = priceMatches[1];
          } else if (!orig && !dash && !orMatch) {
            priceMatches = matches[1].match(/\$([^<]+)/);
            price = priceMatches[1];
          } else if (!orig && dash && !orMatch) {
            priceMatches = matches[1].match(/\$([^<]+)/);
            price = priceMatches[1].trim();
          }
          return this.value(price);
        })
      },
      image: {
        resource: 'productPage',
        scraper: ScriptedResourceScraper(function() {
          var link;
          link = /<meta property="og:image" content="([^"]*)/.exec(this.resource)[1];
          link = "https://dm.victoriassecret.com/product/404x539/" + link.match(/https:\/\/dm\.victoriassecret\.com\/product\/[^\/]+\/([\S\s]*)/)[1];
          return this.value(link);
        })
      },
      more: {
        resource: 'productPage',
        scraper: ScriptedResourceScraper(function() {
          var alternate, code, codes, colors, dash, dashMatches, firstMatches, images, match, matches, name, orMatch, orig, price, priceMatches, prices, switches, value, _i, _j, _k, _len, _len1, _len2;
          switches = {
            images: true,
            description: true,
            originalPrice: true,
            shipping: false
          };
          value = {};
          if (switches.description) {
            matches = this.resource.match(/<div id="description">([\S\s]*?)<\/div>/);
            value.description = matches[1] + "</div>";
          }
          if (switches.details) {
            matches = this.resource.match(/<span class="info-tooltip-display">([\S\s]*?)<\/span>/);
            value.details = matches[1];
          }
          if (switches.originalPrice) {
            firstMatches = this.resource.match(/<div class="price">([\S\s]*?)<div class="more">/);
            matches = firstMatches[1].match(/<p>([\S\s]*)/);
            dashMatches = matches[1].match(/([\S\s]*?)<a/);
            if (!dashMatches) {
              dashMatches = matches[1].match(/([\S\s]*?)<\/p/);
            }
            if (!dashMatches) {
              dashMatches = matches[1].match(/([\S\s]*?)<div class="more"/);
            }
            if (!dashMatches) {
              dashMatches = matches[1].match(/([\S\s]*?)<br/);
            }
            dash = dashMatches[1].match(/(-)/);
            orig = matches[1].match(/(Sale)/);
            orMatch = matches[1].match(/( or )/);
            if (dash && orig && !orMatch) {
              prices = [];
              priceMatches = matches[1].match(/Orig\. \$([^<]+)/g);
              for (_i = 0, _len = priceMatches.length; _i < _len; _i++) {
                match = priceMatches[_i];
                prices.push(match.match(/Orig\. \$([^<]+)/)[1]);
              }
              price = prices[0] + " - $" + prices[1];
            } else if (dash && orMatch && !orig) {
              price = null;
            } else if (!dash && orMatch && !orig) {
              price = null;
            } else if (orig && !dash && !orMatch) {
              priceMatches = matches[1].match(/Orig\. \$([^<]+)/);
              price = priceMatches[1];
            } else if (!orig && !dash && !orMatch) {
              price = null;
            }
            value.originalPrice = price;
          }
          if (switches.images) {
            images = {};
            colors = {};
            matches = this.resource.match(/<div class="swap">([\S\s]*?)<\/div>/);
            codes = matches[1].match(/<span[\s]*?data-alt-image="([^<]*)/g);
            if (codes) {
              for (_j = 0, _len1 = codes.length; _j < _len1; _j++) {
                code = codes[_j];
                name = code.match(/>([\S\s]*)/)[1];
                code = code.match(/data-alt-image="([^"]*)/)[1];
                colors[name] = "https://dm.victoriassecret.com/product/404x539/" + code + ".jpg";
              }
            }
            images["colors"] = colors;
            alternate = [];
            matches = this.resource.match(/<div class="product-image-group">([\S\s]*?)<\/section>/);
            matches = matches[1].match(/<li([\S\s]*?)<\/li>/g);
            if (matches) {
              for (_k = 0, _len2 = matches.length; _k < _len2; _k++) {
                match = matches[_k];
                match = match.match(/src="([^"]+)/);
                if (match) {
                  alternate.push("http:" + match[1]);
                }
              }
              images["alternate"] = alternate;
            }
            value.images = images;
          }
          return this.value(value);
        })
      }
    };

    return VictoriasSecretProductScraper;

  })(ProductScraper);
});

//# sourceMappingURL=VictoriasSecretProductScraper.map
