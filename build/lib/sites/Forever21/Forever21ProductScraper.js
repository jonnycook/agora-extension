// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(['scraping/ProductScraper', 'scraping/resourceScrapers/PatternResourceScraper', 'scraping/resourceScrapers/ScriptedResourceScraper', 'scraping/resourceScrapers/JsonResourceScraper', 'underscore'], function(ProductScraper, PatternResourceScraper, ScriptedResourceScraper, JsonResourceScraper, _) {
  var Forever21ProductScraper;
  return Forever21ProductScraper = (function(superClass) {
    extend(Forever21ProductScraper, superClass);

    function Forever21ProductScraper() {
      return Forever21ProductScraper.__super__.constructor.apply(this, arguments);
    }

    Forever21ProductScraper.testProducts = [135898, 941783012];

    Forever21ProductScraper.test = {
      title: ['2000109887'],
      image: ['2000109887'],
      price: {
        0: ['2018732251'],
        1: ['2000109887']
      }
    };

    Forever21ProductScraper.prototype.resources = {
      productPage: {
        url: function() {
          return "http://www.forever21.com/Product/Product.aspx?category=sweater&ProductID=" + this.productSid;
        }
      }
    };

    Forever21ProductScraper.prototype.properties = {
      title: {
        resource: 'productPage',
        scraper: PatternResourceScraper(/<meta property="og:title" content="([^"]*)" \/>/, 1)
      },
      price: {
        resource: 'productPage',
        scraper: PatternResourceScraper([[/<span itemprop="price"><p class="was-now-price">Was:<s>[^<]*<\/s><br \/>Now:\$([^<]*)/, 1], [/<p class="product-price">\$([^<]*)<\/p>/, 1]])
      },
      image: {
        resource: 'productPage',
        scraper: PatternResourceScraper(/<img id="ctl00_MainContent_productImage" class="[^"]*" title="[^"]*" src="([^"]*)/, 1)
      },
      more: {
        resource: 'productPage',
        scraper: ScriptedResourceScraper(function() {
          var description, features, featuresMatch, i, key, len, modelInfo, modelInfoMatch, modelInfoPart, modelInfoParts, more, overview, ref, sizeMatch, sizeMatches, value;
          overview = /<span id="product_overview" style="[^"]*" class="productFontColor">([\S\s]*)<\/span>/.exec(this.resource)[1];
          description = overview.match(/<p>([\S\s]*?)(?:DETAILS:)?<\/p>/)[1];
          featuresMatch = overview.match(/<ul>([\S\s]*)<\/ul>/)[1];
          features = this.matchAll(featuresMatch, /<li>\s*([\S\s]*?)\s*<\/l?i>/, 1);
          modelInfoMatch = overview.match(/Model Info:&nbsp;([^<]*)/)[1];
          modelInfoParts = modelInfoMatch.split(' | ');
          modelInfo = {};
          for (i = 0, len = modelInfoParts.length; i < len; i++) {
            modelInfoPart = modelInfoParts[i];
            ref = modelInfoPart.split(': '), key = ref[0], value = ref[1];
            modelInfo[key] = value;
          }
          sizeMatch = /<select name="[^"]*" id="ctl00_MainContent_ddlSize" class="input" onchange="[^"]*" style="[^"]*">([\S\s]*?)<\/select>/.exec(this.resource)[1];
          sizeMatches = this.matchAll(sizeMatch, /<option value="[^"]+">([^<]*)/, 1);
          more = {
            description: description,
            features: features,
            modelInfo: modelInfo,
            sizes: sizeMatches
          };
          return this.value(more);
        })
      }
    };

    return Forever21ProductScraper;

  })(ProductScraper);
});

//# sourceMappingURL=Forever21ProductScraper.js.map
