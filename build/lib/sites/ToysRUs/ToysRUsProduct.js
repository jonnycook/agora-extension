// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['scraping/SiteProduct', 'underscore'], function(SiteProduct, _) {
  var ToysRUsProduct;
  return ToysRUsProduct = (function(_super) {
    __extends(ToysRUsProduct, _super);

    function ToysRUsProduct() {
      return ToysRUsProduct.__super__.constructor.apply(this, arguments);
    }

    ToysRUsProduct.prototype.images = function(cb) {
      return this.product["with"]('more', (function(_this) {
        return function(more) {
          var image, legacyImg, newUrl, otherImages, urlFirst, webcollage, _i, _len, _ref;
          otherImages = [];
          _ref = more.images;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            image = _ref[_i];
            legacyImg = image.match(/([\S\s]*?)dt\.jpg/);
            webcollage = image.match(/([\S\s]*?)webcollage\.net/);
            if (legacyImg) {
              urlFirst = legacyImg[1];
              otherImages.push({
                small: urlFirst + "v150.jpg",
                medium: urlFirst + "reg.jpg",
                large: urlFirst + "dt.jpg",
                larger: urlFirst + "dt.jpg",
                full: urlFirst + "enh-z6.jpg"
              });
            } else if (webcollage) {
              newUrl = image.match(/([\S\s]*?)w[0-9]+\.jpg$/);
              if (newUrl) {
                urlFirst = newUrl[1];
                otherImages.push({
                  small: urlFirst + "w240.jpg",
                  medium: urlFirst + "w480.jpg",
                  large: urlFirst + "w960.jpg",
                  larger: urlFirst + "w960.jpg",
                  full: urlFirst
                });
              }
            }
          }
          return cb({
            '': otherImages
          }, '');
        };
      })(this));
    };

    ToysRUsProduct.prototype.widgets = function(cb) {
      return this.product["with"]('more', (function(_this) {
        return function(more) {
          var widgets;
          widgets = _this.genWidgets(more, {
            description: 'Description'
          });
          return cb(widgets);
        };
      })(this));
    };

    return ToysRUsProduct;

  })(SiteProduct);
});

//# sourceMappingURL=ToysRUsProduct.map
