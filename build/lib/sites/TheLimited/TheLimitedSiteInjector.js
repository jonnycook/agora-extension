// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function() {
  return {
    d: ['DataDrivenSiteInjector'],
    c: function() {
      var TheLimitedSiteInjector;
      return TheLimitedSiteInjector = (function(_super) {
        __extends(TheLimitedSiteInjector, _super);

        function TheLimitedSiteInjector() {
          return TheLimitedSiteInjector.__super__.constructor.apply(this, arguments);
        }

        TheLimitedSiteInjector.prototype.parseUrl = function(url) {
          var color, id, size, _ref, _ref1, _ref2;
          id = (_ref = /\/(\d+)[^\/]*?.html/.exec(url)) != null ? _ref[1] : void 0;
          if (!id) {
            return null;
          }
          color = (_ref1 = /_colorCode=(\d*)/.exec(url)) != null ? _ref1[1] : void 0;
          if (!color) {
            return id;
          }
          size = (_ref2 = /_size=(\w*)/.exec(url)) != null ? _ref2[1] : void 0;
          if (!size) {
            return "" + id + "-" + color;
          }
          return "" + id + "-" + color + "-" + size;
        };

        TheLimitedSiteInjector.prototype.productListing = {
          mode: 2,
          image: 'a:not(.swatchanchor) img'
        };

        TheLimitedSiteInjector.prototype.productPage = {
          test: function() {
            return $('#printProductSetImages').length;
          },
          productSid: function() {
            var color, id, parts, size, __, _ref;
            if ($('.zoomPad > img').length) {
              _ref = /([^\/]*?)_(\d*)_\d*\.jpg/.exec($('.zoomPad > img').attr('src')), __ = _ref[0], id = _ref[1], color = _ref[2];
              parts = [id, color];
              size = $('.swatches.size li.selected a').attr('rel');
              if (size) {
                parts.push(size);
              }
              return parts.join('-');
            }
          },
          imgEl: '.zoomPad > img',
          overlayEl: '.zoomPup'
        };

        return TheLimitedSiteInjector;

      })(DataDrivenSiteInjector);
    }
  };
});

//# sourceMappingURL=TheLimitedSiteInjector.map
