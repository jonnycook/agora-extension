// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(['scraping/SiteProduct'], function(SiteProduct) {
  var TheLimitedProduct;
  return TheLimitedProduct = (function(superClass) {
    extend(TheLimitedProduct, superClass);

    function TheLimitedProduct() {
      return TheLimitedProduct.__super__.constructor.apply(this, arguments);
    }

    TheLimitedProduct.prototype.images = function(cb) {
      return this.product["with"]('more', (function(_this) {
        return function(more) {
          var color, i, images, j, len, num, ref;
          images = {};
          num = more.images[more.color].large.length;
          ref = more.colors;
          for (j = 0, len = ref.length; j < len; j++) {
            color = ref[j];
            images[color.name] = (function() {
              var k, ref1, results;
              results = [];
              for (i = k = 0, ref1 = num; 0 <= ref1 ? k < ref1 : k > ref1; i = 0 <= ref1 ? ++k : --k) {
                results.push({
                  small: more.images[color.name].small[i],
                  medium: more.images[color.name].medium[i],
                  large: more.images[color.name].large[i],
                  larger: more.images[color.name].xlarge[i],
                  full: more.images[color.name].xlarge[i]
                });
              }
              return results;
            })();
          }
          return cb(images, more.color);
        };
      })(this));
    };

    TheLimitedProduct.prototype.widgets = function(cb) {
      return this.product["with"]('more', 'reviews', (function(_this) {
        return function(more, reviews) {
          var widgets;
          widgets = _this.genWidgets(more, {
            salesDescription: 'Description',
            sizes: 'Sizes',
            longDescription: 'Details',
            colors: {
              title: 'Colors',
              map: function(color) {
                return color.name;
              }
            },
            reviews: {
              obj: reviews,
              map: {
                review: 'content'
              }
            }
          });
          return cb(widgets);
        };
      })(this));
    };

    return TheLimitedProduct;

  })(SiteProduct);
});

//# sourceMappingURL=TheLimitedProduct.js.map
