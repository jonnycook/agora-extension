// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function() {
  return {
    d: ['SiteInjector', 'views/ShoppingBarView', 'views/compare/CompareView'],
    c: function() {
      var TutorialSiteInjector;
      return TutorialSiteInjector = (function(_super) {
        __extends(TutorialSiteInjector, _super);

        function TutorialSiteInjector() {
          return TutorialSiteInjector.__super__.constructor.apply(this, arguments);
        }

        TutorialSiteInjector.prototype.siteName = 'Tutorial';

        TutorialSiteInjector.prototype.run = function() {
          return this.initPage((function(_this) {
            return function() {
              var callWhen, doTutorial, done, el, productSid, shoppingBarView, siteName, startTutorial, stepStartTime, tutorial, tutorialStep, tutorialSteps, tutorialStepsText, __, _i, _len, _ref, _ref1;
              shoppingBarView = new ShoppingBarView(_this.contentScript, {
                context: 'tutorial'
              });
              shoppingBarView.el.appendTo(document.body);
              shoppingBarView.represent();
              window.suppressPopups = true;
              window.tutorialInProgress = true;
              done = false;
              $(window).bind('beforeunload', function() {
                if (!done) {
                  return 'You haven\'t finished the tour yet.';
                }
              });
              tutorialStepsText = {
                intro: {
                  text: "<p>Welcome to Agora, a tool to improve your online shopping. Let's run through a brief tour of our main features.</p> <p><a href=\"#\" class=\"button begin\">Okay, let's begin.</a></p>",
                  audio: "http://files.agora.sh/tutorialaudio/01_01.mp3"
                },
                productHover: {
                  text: "First, move your mouse over this product image.",
                  audio: "http://files.agora.sh/tutorialaudio/02_01.mp3"
                },
                enterPortal: {
                  text: "Next, click the <b>Inspect button</b> that appears when you hover. It looks like an eye, and it will appear on the product images on all our supported sites.",
                  audio: "http://files.agora.sh/tutorialaudio/03_01.mp3"
                },
                closePortal: {
                  text: "<h2>Product Portal</h2> <p>Welcome to the <b>Product Portal</b>. You can access it from from any product on our growing list of supported sites by clicking the inspect button on product images.</p> <p>Take a look around at the features it provides and when you're done, close the portal by pressing the ESC key or clicking the close button at the top right.</p>",
                  audio: "http://files.agora.sh/tutorialaudio/04_01.mp3"
                },
                dragProduct: {
                  text: "Okay, letâ€™s learn how to collect products that you may want to consider purchasing. Start by dragging this image...",
                  audio: "http://files.agora.sh/tutorialaudio/05_01.mp3"
                },
                dropProduct: {
                  text: "...and drop it down here on the <b>Belt</b>.",
                  audio: "http://files.agora.sh/tutorialaudio/06_01.mp3"
                },
                addFeeling: {
                  text: "<!--<h2>Thoughts and Feelings</h2>--> <p>You can record the feelings and thoughts you have about the products you are shopping for.</p> <p>Type a thought or feeling and <b>press enter</b>, or just <b>press ESC</b> to close this dialog and continue on to the next step.</p>",
                  audio: "http://files.agora.sh/tutorialaudio/07_01.mp3"
                }
              };
              _ref = $('#products .product[data-product]');
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                el = _ref[_i];
                _ref1 = /([^\/]*)\/(.*)/.exec($(el).attr('data-product')), __ = _ref1[0], siteName = _ref1[1], productSid = _ref1[2];
                _this.initProductEl($(el).find('.picture img'), {
                  siteName: siteName,
                  productSid: productSid
                }, {
                  initOverlay: function(overlay) {
                    overlay.autoFixPosition();
                    return overlay.showPreview = false;
                  }
                });
              }
              callWhen = function(el, cb) {
                var timerId;
                return timerId = setInterval((function() {
                  if ($(el).length) {
                    cb();
                    return clearInterval(timerId);
                  }
                }), 50);
              };
              tutorialSteps = [
                function(next) {
                  tutorial.showCenter(400, tutorialStepsText.intro);
                  return tutorial.frameEl.find('.begin').click((function(_this) {
                    return function() {
                      next();
                      ++tutorialStep;
                      return false;
                    };
                  })(this));
                }, function(next) {
                  tutorial.show($('#product1'), 'left', tutorialStepsText.productHover);
                  return $('#product1').mouseover((function(_this) {
                    return function() {
                      if (tutorialStep === 1) {
                        next();
                        return ++tutorialStep;
                      }
                    };
                  })(this));
                }, function(next) {
                  tutorial.show($('#product1 img').data('agora').overlayView.el, 'below', tutorialStepsText.enterPortal);
                  return $('#product1 img').data('agora').overlayView.el.click((function(_this) {
                    return function() {
                      if (tutorialStep === 2) {
                        return setTimeout((function() {
                          return next();
                        }), 500);
                      }
                    };
                  })(this));
                }, function(next) {
                  var timerId;
                  tutorial.show({
                    left: $(window).width() / 2 - 300,
                    top: $(window).height() / 2 - 100,
                    pointer: false
                  }, 'below', tutorialStepsText.closePortal);
                  return timerId = setInterval(((function(_this) {
                    return function() {
                      if (!$('.v-productPreview2').length) {
                        clearInterval(timerId);
                        return setTimeout((function() {
                          return next();
                        }), 200);
                      }
                    };
                  })(this)), 100);
                }, function(next) {
                  tutorial.show($('#product1 img'), 'right', tutorialStepsText.dragProduct);
                  return $('#product1 img').mousedown((function(_this) {
                    return function() {
                      if (tutorialStep === 2) {
                        return next();
                      }
                    };
                  })(this));
                }, function(next) {
                  var timerId;
                  tutorial.show($('.v-shoppingBar'), 'above', tutorialStepsText.dropProduct);
                  ++tutorialStep;
                  return timerId = setInterval(((function(_this) {
                    return function() {
                      if ($('.v-addFeeling').length) {
                        clearInterval(timerId);
                        return next();
                      }
                    };
                  })(this)), 100);
                }, function(next) {
                  var timerId;
                  tutorial.show($('.v-addFeeling'), 'above', tutorialStepsText.addFeeling);
                  return timerId = setInterval(((function(_this) {
                    return function() {
                      if (!$('.v-addFeeling').length) {
                        window.suppressAddFeeling = true;
                        clearInterval(timerId);
                        return next();
                      }
                    };
                  })(this)), 100);
                }, function(next) {
                  tutorial.show($('#product2 img'), 'below', {
                    text: 'Now start dragging this product image, but this time don\'t drop it directly onto the Belt.',
                    audio: 'http://files.agora.sh/tutorialaudio/08_01.mp3'
                  });
                  return $('#product2 img').one('mousedown', (function(_this) {
                    return function() {
                      return next();
                    };
                  })(this));
                }, function(next) {
                  var timerId;
                  tutorial.show($('.v-shoppingBar .product'), 'above', {
                    text: 'Instead, drop it down onto this product.',
                    audio: 'http://files.agora.sh/tutorialaudio/09_01.mp3'
                  });
                  return timerId = setInterval(((function(_this) {
                    return function() {
                      if ($('.v-shoppingBar .decision').length) {
                        clearInterval(timerId);
                        return next();
                      }
                    };
                  })(this)), 100);
                }, function(next) {
                  var timerId;
                  tutorial.show($('.v-shoppingBar .decision'), 'above', {
                    text: '<p>You\'ve created a <b>Decision</b>. Decisions are used to store all the products you are considering for one particular purchase, and represents a single "buying decision."</p> <p>Now click the Decision to view the products you added to it.</b>',
                    audio: 'http://files.agora.sh/tutorialaudio/10_01.mp3'
                  });
                  return timerId = setInterval(((function(_this) {
                    return function() {
                      if ($('.v-shoppingBar.Decision').length) {
                        clearInterval(timerId);
                        return next();
                      }
                    };
                  })(this)), 100);
                }, function(next) {
                  return callWhen('.v-shoppingBar .product:last', function() {
                    tutorial.show($('.v-shoppingBar .product:last'), 'above', {
                      text: '<p>You can think of the products on your Belt as special browser bookmarks just for shopping. All the products you add to it will be available to you any time you visit one of our supported sites. You\'ll also be able to add new products by dropping any product image you see on a supported site onto the Belt.</p> <p>Next, click this product to visit its retail page.</p>',
                      audio: 'http://files.agora.sh/tutorialaudio/11_01.mp3'
                    });
                    done = true;
                    next();
                    if (chrome.extension) {
                      return chrome.runtime.sendMessage('continueTutorial');
                    } else {
                      chrome.runtime.sendMessage('jhlelmocecgfffgmpbkjjgkdjlpbjain', 'continueTutorial');
                      chrome.runtime.sendMessage('ejlcjafiokgjbepfhclmlmlkkjnjadej', 'continueTutorial');
                      return chrome.runtime.sendMessage('eikmdfdlppngdbmdllhkmkchnkiiecea', 'continueTutorial');
                    }
                  });
                }
              ];
              tutorialStep = 0;
              tutorial = new TutorialDialog(20, 1);
              stepStartTime = null;
              doTutorial = function(i) {
                if (i > 0) {
                  console.debug('time', i, new Date().getTime() - stepStartTime);
                  tracking.time('Tutorial', "Step" + i, new Date().getTime() - stepStartTime);
                }
                if (tutorialSteps[i]) {
                  this.contentScript.triggerBackgroundEvent('tutorialStep', i + 1);
                  console.debug(i + 1);
                  stepStartTime = new Date().getTime();
                  return tutorialSteps[i](function() {
                    return doTutorial(i + 1);
                  });
                }
              };
              startTutorial = function() {
                chrome.runtime.sendMessage('startTutorial');
                return doTutorial(0);
              };
              return $(startTutorial);
            };
          })(this));
        };

        return TutorialSiteInjector;

      })(SiteInjector);
    }
  };
});

//# sourceMappingURL=TutorialSiteInjector.map
