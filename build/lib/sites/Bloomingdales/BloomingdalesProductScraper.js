// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['scraping/ProductScraper', 'scraping/resourceScrapers/PatternResourceScraper', 'scraping/resourceScrapers/ScriptedResourceScraper', 'scraping/resourceScrapers/JsonResourceScraper', 'scraping/resourceScrapers/DeclarativeResourceScraper', 'util', 'underscore'], function(ProductScraper, PatternResourceScraper, ScriptedResourceScraper, JsonResourceScraper, DeclarativeResourceScraper, util, _) {
  var BloomingdalesProductScraper;
  return BloomingdalesProductScraper = (function(_super) {
    __extends(BloomingdalesProductScraper, _super);

    function BloomingdalesProductScraper() {
      return BloomingdalesProductScraper.__super__.constructor.apply(this, arguments);
    }

    BloomingdalesProductScraper.prototype.version = 3;

    BloomingdalesProductScraper.prototype.parseSid = function(sid) {
      var id, variant, _ref;
      _ref = sid.split('-'), id = _ref[0], variant = _ref[1];
      return {
        id: id,
        variant: variant
      };
    };

    BloomingdalesProductScraper.prototype.resources = {
      productPage: {
        url: function() {
          var url;
          url = "http://www1.bloomingdales.com/shop/product/?ID=" + this.productSid.id;
          if (this.productSid.variant) {
            url += "&upc_ID=" + this.productSid.variant;
          }
          return url;
        }
      },
      reviewData: {
        url: function() {
          return "http://bloomingdales.ugc.bazaarvoice.com/7130aa/" + this.productSid.id + "/reviews.djs?format=embeddedhtml";
        }
      }
    };

    BloomingdalesProductScraper.prototype.properties = {
      title: {
        resource: 'productPage',
        scraper: DeclarativeResourceScraper('scraper', 'title')
      },
      image: {
        resource: 'productPage',
        scraper: ScriptedResourceScraper(function() {
          var color, matches, primaryImages, regExp;
          color = this.productSid.variant ? (regExp = new RegExp("\"upcID\": " + this.productSid.variant + ", \"inStoreEligible\": [^,]*, \"color\": \"([^\"]*)\""), regExp.exec(this.resource)[1]) : /BLOOMIES.pdp.primaryColor = "([^"]*)";/.exec(this.resource)[1];
          matches = /BLOOMIES.pdp.primaryImages\[\d*\] = (\{[\S\s]*?\})/.exec(this.resource);
          primaryImages = JSON.parse(matches[1].replace(/'/g, '"'));
          return this.value("http://images.bloomingdales.com/is/image/BLM/products/" + primaryImages[color] + "?wid=325&qlt=90,0&layer=comp&op_sharpen=0&resMode=sharp2&op_usm=0.7,1.0,0.5,0&fmt=jpeg");
        })
      },
      price: {
        resource: 'productPage',
        scraper: DeclarativeResourceScraper('scraper', 'price')
      },
      more: {
        resource: 'productPage',
        scraper: ScriptedResourceScraper(function() {
          var additionalImages, color, image, images, matches, more, primaryImages, regExp;
          more = this.declarativeScraper('scraper', 'more');
          matches = /BLOOMIES.pdp.primaryImages\[\d*\] = (\{[\S\s]*?\})/.exec(this.resource);
          primaryImages = JSON.parse(matches[1].replace(/'/g, '"'));
          matches = /BLOOMIES.pdp.additionalImages\[\d*\] = (\{[\S\s]*?\})/.exec(this.resource);
          additionalImages = JSON.parse(matches[1].replace(/'/g, '"'));
          images = {};
          for (color in primaryImages) {
            image = primaryImages[color];
            images[color] = [image].concat(additionalImages[color].split(','));
          }
          more.images = images;
          if (this.productSid.variant) {
            regExp = new RegExp("\"upcID\": " + this.productSid.variant + ", \"inStoreEligible\": [^,]*, \"color\": \"([^\"]*)\"");
            more.color = regExp.exec(this.resource)[1];
          } else {
            more.color = /BLOOMIES.pdp.primaryColor = "([^"]*)";/.exec(this.resource)[1];
          }
          return this.value(more);
        })
      },
      rating: {
        resource: 'reviewData',
        scraper: PatternResourceScraper([
          [
            /write a review<\\\/a>/, 0, function() {
              return 0;
            }
          ], [/alt=\\"(.*?) \/ 5\\"/, 1]
        ])
      },
      ratingCount: {
        resource: 'reviewData',
        scraper: PatternResourceScraper([
          [
            /write a review<\\\/a>/, 0, function() {
              return 0;
            }
          ], [/<span class=\\"BVRRNumber\\">(\d+)/, 1]
        ])
      },
      reviews: {
        resource: 'reviewData',
        scraper: ScriptedResourceScraper(function() {
          var authorMatches, contentMatches, dateMatches, i, ratingsMatches, reviews, reviewsText, titleMatch, titleMatches, _ref;
          reviewsText = (_ref = this.resource.match(/BVRRDisplayContentBodyID([\S\s]*)/)) != null ? _ref[1] : void 0;
          if (reviewsText) {
            titleMatches = this.matchAll(reviewsText, /<span class=\\"BVRRValue BVRRReviewTitle\\">([\S\s]*?)<\\\/span>/, 1);
            contentMatches = this.matchAll(reviewsText, /<span class=\\"BVRRReviewText\\">([\S\s]*?)<\\\/span>/, 1);
            ratingsMatches = this.matchAll(reviewsText, /title=\\"(\d+) \/ 5\\"/, 1);
            authorMatches = this.matchAll(reviewsText, /<span class=\\"BVRRNickname\\">([^<]*?) <\\\/span>/, 1);
            dateMatches = this.matchAll(reviewsText, /<span class=\\"BVRRValue BVRRReviewDate\\">([^<]*)<\\\/span>/, 1);
            reviews = (function() {
              var _i, _len, _results;
              _results = [];
              for (i = _i = 0, _len = titleMatches.length; _i < _len; i = ++_i) {
                titleMatch = titleMatches[i];
                _results.push({
                  title: titleMatch,
                  content: contentMatches[i],
                  rating: ratingsMatches[i],
                  author: authorMatches[i],
                  date: dateMatches[i]
                });
              }
              return _results;
            })();
            return this.value(reviews);
          } else {
            return this.value([]);
          }
        })
      }
    };

    return BloomingdalesProductScraper;

  })(ProductScraper);
});

//# sourceMappingURL=BloomingdalesProductScraper.map
