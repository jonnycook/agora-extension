// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['View', 'Site', 'Formatter', 'util', 'underscore'], function(View, Site, Formatter, util, _) {
  var DataView;
  return DataView = (function(_super) {
    __extends(DataView, _super);

    function DataView() {
      return DataView.__super__.constructor.apply(this, arguments);
    }

    DataView.nextId = 0;

    DataView.id = function(args) {
      return ++this.nextId;
    };

    DataView.prototype.initAsync = function(args, done) {
      return this.resolveObject(args, (function(_this) {
        return function(obj) {
          _this.data = _this.ctx.clientArray(obj.get('data'), function(datum, onRemove) {
            var ctx;
            ctx = _this.context();
            onRemove(function() {
              return ctx.destruct();
            });
            return {
              id: datum.get('id'),
              type: ctx.clientValue(datum.field('type')),
              url: ctx.clientValue(datum.field('url')),
              title: ctx.clientValue(datum.field('title')),
              text: ctx.clientValue(datum.field('text')),
              comment: ctx.clientValue(datum.field('comment'))
            };
          });
          return done();
        };
      })(this));
    };

    DataView.prototype.methods = {
      "delete": function(view, id) {
        return this.agora.modelManager.getInstance('Datum', id)["delete"]();
      }
    };

    return DataView;

  })(View);
});

//# sourceMappingURL=DataView.map
