// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['View', 'util'], function(View, util) {
  var BuyView;
  return BuyView = (function(_super) {
    __extends(BuyView, _super);

    function BuyView() {
      return BuyView.__super__.constructor.apply(this, arguments);
    }

    BuyView.nextId = 1;

    BuyView.id = function() {
      return this.nextId++;
    };

    BuyView.prototype.init = function(args) {
      var listElementIds, otherProducts, product, products, twoTapProducts, view, _i, _len;
      if (args.id) {
        this.decision = this.agora.modelManager.getInstance('Decision', args.id);
      } else if (args.viewId) {
        view = this.agora.View.clientViews[args.viewId].view;
        if (view.name === 'compare/Compare') {
          this.decision = view.currentDecision();
        }
      }
      products = [];
      listElementIds = [];
      this.decision.get('selection').each((function(_this) {
        return function(element) {
          listElementIds.push(element.saneId());
          return products = products.concat(util.resolveProducts(element.get('element')));
        };
      })(this));
      twoTapProducts = [];
      otherProducts = [];
      for (_i = 0, _len = products.length; _i < _len; _i++) {
        product = products[_i];
        product.set('purchased', true);
        if (product.site().config.twoTap) {
          twoTapProducts.push("" + (product.get('siteName')) + "/" + (product.get('productSid')));
        } else {
          otherProducts.push("" + (product.get('siteName')) + "/" + (product.get('productSid')));
        }
      }
      if (twoTapProducts.length) {
        return this.data = {
          url: "http://ext.agora.sh/checkout.php?" + ("decision=" + (this.decision.saneId()) + "&") + ("products=" + (otherProducts.join(',')) + "&") + ("twoTapProducts=" + (twoTapProducts.join(',')) + "&") + ("listElements=" + (listElementIds.join(',')) + "&") + ("clientId=" + this.agora.updater.clientId)
        };
      } else {
        this.data = {};
        return this.agora.background.httpRequest("http://ext.agora.sh/checkout.php?" + ("decision=" + (this.decision.saneId()) + "&") + ("products=" + (otherProducts.join(',')) + "&") + ("listElements=" + (listElementIds.join(',')) + "&") + ("clientId=" + this.agora.updater.clientId));
      }
    };

    return BuyView;

  })(View);
});

//# sourceMappingURL=BuyView.map
