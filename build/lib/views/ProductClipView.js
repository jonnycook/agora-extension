// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(['View', 'Formatter'], function(View, Formatter) {
  var ProductClipView;
  return ProductClipView = (function(superClass) {
    extend(ProductClipView, superClass);

    function ProductClipView() {
      return ProductClipView.__super__.constructor.apply(this, arguments);
    }

    ProductClipView.nextId = 1;

    ProductClipView.id = function(args) {
      return this.nextId++;
    };

    ProductClipView.prototype.initAsync = function(args, done) {
      var __;
      __ = (function(_this) {
        return function(product) {
          _this.data = {
            title: _this.clientValueNamed('ProductClipView.title', product.field('title'), product.displayValue('title')),
            site: _this.clientValueNamed('ProductClipView.site', product.field('siteName')),
            price: _this.clientValueNamed('ProductClipView.price', product.field('price'), product.displayValue('price'))
          };
          return done();
        };
      })(this);
      if (args.elementType && args.elementId) {
        return __(this.agora.modelManager.getInstance(args.elementType, args.elementId).get('element'));
      } else {
        return this.agora.product(args, __);
      }
    };

    ProductClipView.prototype.getData = function(cb) {
      return cb(this.data);
    };

    return ProductClipView;

  })(View);
});

//# sourceMappingURL=ProductClipView.js.map
