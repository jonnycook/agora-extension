// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(['View', 'Site', 'Formatter', 'util', 'underscore', 'taxonomy'], function(View, Site, Formatter, util, _, taxonomy) {
  var AddDescriptorView;
  return AddDescriptorView = (function(superClass) {
    extend(AddDescriptorView, superClass);

    function AddDescriptorView() {
      return AddDescriptorView.__super__.constructor.apply(this, arguments);
    }

    AddDescriptorView.prototype.init = function() {
      return this.data = this.clientValue();
    };

    AddDescriptorView.prototype.methods = {
      parse: function(view, descriptor) {
        return this.agora.background.httpRequest(this.agora.background.apiRoot + "parse.php", {
          data: {
            descriptor: descriptor
          },
          cb: (function(_this) {
            return function(response) {
              return _this.data.set({
                descriptor: response,
                icon: taxonomy.icon(response.product.type)
              });
            };
          })(this)
        });
      }
    };

    return AddDescriptorView;

  })(View);
});

//# sourceMappingURL=AddDescriptorView.js.map
