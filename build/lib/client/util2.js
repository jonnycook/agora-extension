// Generated by CoffeeScript 1.7.1
define(function() {
  return function() {
    return {
      setRating: function(el, rating, animate) {
        var delay, i, intRating, speed, starEl, _i, _len, _ref;
        if (animate == null) {
          animate = false;
        }
        if (rating === '(error)') {
          _ref = el.find('div div');
          for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
            starEl = _ref[i];
            $(starEl).css({
              width: 0
            });
          }
          return el.addClass('error');
        } else {
          el.removeClass('error');
          intRating = parseInt(rating);
          el.find('div div').css({
            width: 0
          });
          speed = 100;
          delay = -10;
          return setTimeout((function() {
            var _j, _len1, _ref1;
            _ref1 = el.find('div div');
            for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {
              starEl = _ref1[i];
              if (i < intRating) {
                if (animate) {
                  (function(starEl, i) {
                    return setTimeout((function() {
                      return $(starEl).animate({
                        width: 18
                      }, speed);
                    }), i * (speed + delay));
                  })(starEl, i);
                } else {
                  $(starEl).css({
                    width: 18
                  });
                }
              }
            }
            if (rating - intRating) {
              if (animate) {
                return setTimeout((function() {
                  return el.find("div:nth-child(" + (intRating + 1) + ") div").animate({
                    width: 18 * (rating - intRating)
                  }, speed);
                }), intRating * (speed + delay));
              } else {
                return el.find("div:nth-child(" + (intRating + 1) + ") div").css({
                  width: 18 * (rating - intRating)
                });
              }
            }
          }), animate ? 500 : 0);
        }
      },
      ratingHtml: '<div><div /></div> <div><div /></div> <div><div /></div> <div><div /></div> <div><div /></div>'
    };
  };
});

//# sourceMappingURL=util2.map
