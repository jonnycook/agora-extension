// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(function() {
  return {
    d: ['View', 'util', 'views/compare/ListTileItem'],
    c: function() {
      var BundleTileItem;
      return BundleTileItem = (function(superClass) {
        extend(BundleTileItem, superClass);

        function BundleTileItem() {
          return BundleTileItem.__super__.constructor.apply(this, arguments);
        }

        BundleTileItem.prototype.type = 'Bundle';

        BundleTileItem.prototype.html = '';

        BundleTileItem.prototype.init = function() {
          BundleTileItem.__super__.init.apply(this, arguments);
          return this.el.children('.grip').mouseenter(function() {
            if ($(this).parent().hasClass('hover') && util.isMutable($(this).parent())) {
              return $(this).addClass('hover');
            }
          }).mouseleave(function() {
            if (util.isMutable($(this).parent())) {
              if (!$(this).parent().hasClass('dragging')) {
                return $(this).removeClass('hover');
              }
            }
          });
        };

        BundleTileItem.prototype.updateTilesLayout = function(params, state) {
          var gripEl, i, j, len, ref, results, segment;
          BundleTileItem.__super__.updateTilesLayout.apply(this, arguments);
          this.el.children('.grip').remove();
          ref = this.segments;
          results = [];
          for (i = j = 0, len = ref.length; j < len; i = ++j) {
            segment = ref[i];
            gripEl = $('<div class="grip" />');
            if (this.segments.length > 1) {
              if (i === 0) {
                gripEl.addClass('left');
              } else if (i === this.segments.length - 1) {
                gripEl.addClass('right');
              } else {
                gripEl.addClass('middle');
              }
            }
            gripEl.css({
              position: 'absolute',
              left: segment.left,
              width: segment.width,
              top: segment.top + params.rowHeight + 7,
              height: 10
            });
            results.push(gripEl.appendTo(this.el));
          }
          return results;
        };

        return BundleTileItem;

      })(ListTileItem);
    }
  };
});

//# sourceMappingURL=BundleTileItem.js.map
