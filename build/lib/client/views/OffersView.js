// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(function() {
  return {
    d: ['View', 'Frame'],
    c: function() {
      var OffersView;
      return OffersView = (function(superClass) {
        extend(OffersView, superClass);

        OffersView.prototype.type = 'Offers';

        function OffersView(contentScript) {
          this.contentScript = contentScript;
          OffersView.__super__.constructor.call(this, this.contentScript);
          this.el = $('<div class="-agora v-offers images"> <div class="cont"> Loading offers... </div> </div>');
          this.el.find('.n-remove').click((function(_this) {
            return function() {
              return _this.callBackgroundMethod('remove');
            };
          })(this));
          util.trapScrolling(this.el.find('.cont'));
        }

        OffersView.prototype.onData = function(data) {
          var updateOffers, updateSelectedOffer;
          updateOffers = (function(_this) {
            return function() {
              var contEl, fn, i, j, len, len1, offer, offerSection, offers, offersEl, ref, sectionEl;
              contEl = _this.el.find('.cont');
              if (data.offers.get()) {
                contEl.html('');
                offers = data.offers.get();
                if (offers.length) {
                  for (i = 0, len = offers.length; i < len; i++) {
                    offerSection = offers[i];
                    sectionEl = $('<div class="section" />');
                    sectionEl.append("<h2>" + offerSection.heading + "</h2>");
                    offersEl = $('<ul class="offers" />');
                    ref = offerSection.offers;
                    fn = function(offer) {
                      var offerEl;
                      offerEl = $("<li class='offer' data-api='" + offer.api + "' offerid='" + offer.id + "'> <a href='" + offer.url + "' target='_blank' class='photo' style='background-image:url('" + offer.image + "')'></a> <a href='" + offer.url + "' target='_blank' class='title'>" + offer.title + "</a> <span class='site'>" + offer.site + "</span> <span class='price'>" + offer.price + "</span> </li>");
                      offerEl.find('.price').click(function() {
                        _this.event('setOffer');
                        _this.callBackgroundMethod('setOffer', offer.data);
                        return false;
                      });
                      return offersEl.append(offerEl);
                    };
                    for (j = 0, len1 = ref.length; j < len1; j++) {
                      offer = ref[j];
                      fn(offer);
                    }
                    sectionEl.append(offersEl);
                    contEl.append(sectionEl);
                  }
                } else {
                  contEl.html('No offers');
                }
              }
              if (typeof _this.sizeChanged === "function") {
                _this.sizeChanged();
              }
              return updateSelectedOffer();
            };
          })(this);
          updateSelectedOffer = (function(_this) {
            return function() {
              _this.el.find('.offer.selected').removeClass('selected');
              return _this.el.find("[offerid='" + (data.selectedOffer.get()) + "'").addClass('selected');
            };
          })(this);
          data.offers.observe(updateOffers);
          updateOffers();
          return data.selectedOffer.observe(updateSelectedOffer);
        };

        OffersView.prototype.shown = function() {
          return this.event('open');
        };

        return OffersView;

      })(View);
    }
  };
});

//# sourceMappingURL=OffersView.js.map
