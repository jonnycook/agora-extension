// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function() {
  return {
    d: ['View', 'Frame'],
    c: function() {
      var ReviewsView;
      return ReviewsView = (function(_super) {
        __extends(ReviewsView, _super);

        ReviewsView.prototype.type = 'Reviews';

        function ReviewsView(contentScript) {
          this.contentScript = contentScript;
          ReviewsView.__super__.constructor.call(this, this.contentScript);
          this.el = $('<div class="-agora v-reviews"> <div class="cont"> Loading reviews... </div> </div>');
          util.trapScrolling(this.el.find('.cont'));
        }

        ReviewsView.prototype.onData = function(data) {
          return this.withData(data, (function(_this) {
            return function(data) {
              var contEl, el, review, text, _i, _len, _ref, _ref1;
              contEl = _this.el.find('.cont');
              contEl.html('');
              if (data.reviews.length || data.reviews.url) {
                _ref = data.reviews;
                for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                  review = _ref[_i];
                  el = $("<div class='review'> <a class='title' target='_blank' href='" + review.url + "'> <span class='rating rating" + review.rating + "'> <span /> <span /> <span /> <span /> <span /> </span> " + review.title + "</a> <div class='review'>" + review.review + "</div> <a href='" + review.url + "' target='_blank' class='readMore'>Read more</a> </div>");
                  el.find('.title').click(function() {
                    return _this.event('goToReview');
                  });
                  contEl.append(el);
                }
                if (data.url) {
                  text = (function() {
                    if (data.count === void 0) {
                      return 'Read all reviews';
                    } else {
                      switch (data.count) {
                        case 0:
                          return 'No reviews';
                        case 1:
                          return 'Read one review';
                        default:
                          return "Read all " + data.count + " reviews";
                      }
                    }
                  })();
                  contEl.append("<a class='allReviews' target='_blank' href='" + ((_ref1 = data.url) != null ? _ref1 : '#') + "'>" + text + "</a>");
                  contEl.find('.allReviews').click(function() {
                    return _this.event('goToAllReviews');
                  });
                }
              } else {
                contEl.html('No reviews');
              }
              return typeof _this.sizeChanged === "function" ? _this.sizeChanged() : void 0;
            };
          })(this));
        };

        ReviewsView.prototype.shown = function() {
          return this.event('open');
        };

        return ReviewsView;

      })(View);
    }
  };
});

//# sourceMappingURL=ReviewsView.map
