// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(function() {
  return {
    d: ['views/ShoppingBarView/BarItem', 'util', 'icons'],
    c: function() {
      var CompositeSlotBarItem;
      return CompositeSlotBarItem = (function(superClass) {
        extend(CompositeSlotBarItem, superClass);

        function CompositeSlotBarItem() {
          return CompositeSlotBarItem.__super__.constructor.apply(this, arguments);
        }

        CompositeSlotBarItem.prototype.supportsCreateBundle = function() {
          return false;
        };

        CompositeSlotBarItem.prototype.width = function() {
          return CompositeSlotBarItem.__super__.width.apply(this, arguments) + (this.elementView ? this.elementView.width() : 48);
        };

        CompositeSlotBarItem.prototype.onData = function(data) {
          this.observeObject(data.elementId, (function(_this) {
            return function(mutation) {
              if (_this.elementView) {
                _this.elementView.el.remove();
                _this.elementView.detach();
                _this.elementView.destruct();
                delete _this.elementView;
              }
              if (data.elementId.get()) {
                _this.elementView = util.getBarItem({
                  type: data.elementType.get(),
                  id: data.elementId.get(),
                  container: {
                    type: 'CompositeSlot',
                    id: data.id
                  }
                }, _this.view, _this.view.shoppingBarView);
                _this.el.append(_this.elementView.el);
                return _this.widthChanged();
              }
            };
          })(this));
          if (data.elementId.get()) {
            this.elementView = util.getBarItem({
              type: data.elementType.get(),
              id: data.elementId.get(),
              container: {
                type: 'CompositeSlot',
                id: data.id
              }
            }, this.view, this.view.shoppingBarView);
            this.el.append(this.elementView.el);
          }
          this.el.addClass(data.type);
          icons.setIcon(this.el, data.type);
          return this.widthChanged();
        };

        return CompositeSlotBarItem;

      })(BarItem);
    }
  };
});

//# sourceMappingURL=CompositeSlotBarItem.js.map
