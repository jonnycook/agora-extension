// Generated by CoffeeScript 1.7.1
define(function() {
  return function() {
    var Debug;
    return Debug = (function() {
      function Debug() {}

      Debug.stackTrace = function() {
        var trace;
        trace = Error().stack;
        trace = trace.split("\n").slice(3, -2);
        return _.map(trace, function(line) {
          var matches;
          matches = line.match(/at (.*?) \(/);
          if (matches) {
            return matches[1];
          }
        });
      };

      Debug.log = function() {
        var args, caller, i, ignoreList, item, list, matched, trace, _i, _j, _len, _len1;
        ignoreList = [['triggerBackgroundEvent', 'DeleteView'], ['triggerBackgroundEvent'], ['callBackgroundMethod'], [/^listen/], [/^stopListening/], ['CLIENT:'], [/^Process/], ['ConnectView'], ['ReceivedRequest']];
        for (_i = 0, _len = ignoreList.length; _i < _len; _i++) {
          list = ignoreList[_i];
          matched = true;
          for (i = _j = 0, _len1 = list.length; _j < _len1; i = ++_j) {
            item = list[i];
            if (typeof item === 'string') {
              if (arguments[i] !== item) {
                matched = false;
              }
            } else {
              if (!item.exec(arguments[i])) {
                matched = false;
              }
            }
            if (!matched) {
              break;
            }
          }
          if (matched) {
            return;
          }
        }
        trace = this.stackTrace();
        args = Array.prototype.slice.call(arguments, 0, arguments.length);
        caller = trace[1];
        args.unshift('CLIENT:');
        return console.debug.apply(console, args);
      };

      return Debug;

    })();
  };
});

//# sourceMappingURL=Debug.map
