// Generated by CoffeeScript 1.10.0
define(function() {
  var maintainOrder;
  return maintainOrder = function(orderBy, instance, list) {
    var compare, order, ordering;
    compare = (function(_this) {
      return function(a, b) {
        var result;
        if (a.get(orderBy.field) < b.get(orderBy.field)) {
          result = -1;
        } else if (a.get(orderBy.field) > b.get(orderBy.field)) {
          result = 1;
        } else {
          result = 0;
        }
        if (orderBy.direction === 'desc') {
          result *= -1;
        }
        return result;
      };
    })(this);
    list.sort(compare);
    ordering = false;
    order = function() {
      var i, index, j, k, ref, ref1, result, to;
      if (ordering) {
        return;
      }
      ordering = true;
      index = list.indexOf(instance);
      to = null;
      for (i = j = 0, ref = list.length() - 1; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {
        if (instance === list.get(i)) {
          continue;
        }
        result = compare(instance, list.get(i));
        if (result < 0) {
          to = index > i ? i : i - 1;
          break;
        } else if (result === 0) {
          return;
        }
      }
      if (to === null) {
        to = list.length() - 1;
      }
      list.move(index, to);
      for (i = k = 0, ref1 = list.length() - 1; 0 <= ref1 ? k <= ref1 : k >= ref1; i = 0 <= ref1 ? ++k : --k) {
        list.get(i).set(orderBy.field, i);
      }
      return ordering = false;
    };
    instance.field(orderBy.field).observe(order);
    return function() {
      return instance.field(orderBy.field).stopObserving(order);
    };
  };
});

//# sourceMappingURL=maintainOrder.js.map
