// Generated by CoffeeScript 1.7.1
define(['util'], function(util) {
  return function(cb) {
    return this.product["with"]('more', (function(_this) {
      return function(more) {
        var description, quote, quotes, review, reviews, tags, widgets, _i, _j, _len, _len1, _ref, _ref1, _ref10, _ref11, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9;
        widgets = [];
        if (more.description) {
          tags = ['h1', 'h2', 'h3', 'h4', 'p', 'small', 'b', 'small', 'a', 'br', 'em'];
          description = util.stripHtml(more.description);
          widgets.push({
            type: 'html',
            data: {
              title: 'Description',
              content: description
            }
          });
        }
        if (more.features && more.features.length) {
          widgets.push({
            type: 'AmazonFeatures',
            data: more.features
          });
        }
        if (more.sizes && more.sizes.length) {
          widgets.push({
            type: 'AmazonSizes',
            data: {
              sizes: more.sizes,
              howItFits: more.howItFits
            }
          });
        }
        if ((_ref = more.reviews) != null ? (_ref1 = _ref.mostHelpful) != null ? _ref1[0] : void 0 : void 0) {
          review = more != null ? (_ref2 = more.reviews) != null ? (_ref3 = _ref2.mostHelpful) != null ? _ref3[0] : void 0 : void 0 : void 0;
          widgets.push({
            type: 'AmazonMostHelpfulReview',
            data: {
              rating: review.rating,
              author: review.author,
              review: util.stripHtml(review.review),
              title: review.title,
              url: util.url(review.url)
            }
          });
        }
        if ((_ref4 = more.reviews) != null ? (_ref5 = _ref4.quotes) != null ? _ref5.length : void 0 : void 0) {
          quotes = [];
          _ref7 = (_ref6 = more.reviews) != null ? _ref6.quotes : void 0;
          for (_i = 0, _len = _ref7.length; _i < _len; _i++) {
            quote = _ref7[_i];
            quotes.push({
              author: quote.author,
              quote: util.stripHtml(quote.quote),
              url: util.url(quote.url)
            });
          }
          widgets.push({
            type: 'AmazonQuotes',
            data: quotes
          });
        }
        if ((_ref8 = more.reviews) != null ? (_ref9 = _ref8.mostRecent) != null ? _ref9.length : void 0 : void 0) {
          reviews = [];
          _ref11 = (_ref10 = more.reviews) != null ? _ref10.mostRecent : void 0;
          for (_j = 0, _len1 = _ref11.length; _j < _len1; _j++) {
            review = _ref11[_j];
            reviews.push({
              rating: review.rating,
              title: review.title,
              author: review.author,
              review: util.stripHtml(review.review),
              url: util.url(review.url)
            });
          }
          widgets.push({
            type: 'AmazonMostRecentReviews',
            data: reviews
          });
        }
        if (more.details) {
          widgets.push({
            type: 'AmazonDetails',
            data: more.details
          });
        }
        return cb(widgets);
      };
    })(this));
  };
});

//# sourceMappingURL=AmazonProductWidgets.map
