// Generated by CoffeeScript 1.10.0
define(['util'], function(util) {
  return function(cb) {
    return this.product["with"]('more', (function(_this) {
      return function(more) {
        var description, i, j, len, len1, quote, quotes, ref, ref1, ref10, ref11, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, review, reviews, tags, widgets;
        widgets = [];
        if (more.description) {
          tags = ['h1', 'h2', 'h3', 'h4', 'p', 'small', 'b', 'small', 'a', 'br', 'em'];
          description = util.stripHtml(more.description);
          widgets.push({
            type: 'html',
            data: {
              title: 'Description',
              content: description
            }
          });
        }
        if (more.features && more.features.length) {
          widgets.push({
            type: 'AmazonFeatures',
            data: more.features
          });
        }
        if (more.sizes && more.sizes.length) {
          widgets.push({
            type: 'AmazonSizes',
            data: {
              sizes: more.sizes,
              howItFits: more.howItFits
            }
          });
        }
        if ((ref = more.reviews) != null ? (ref1 = ref.mostHelpful) != null ? ref1[0] : void 0 : void 0) {
          review = more != null ? (ref2 = more.reviews) != null ? (ref3 = ref2.mostHelpful) != null ? ref3[0] : void 0 : void 0 : void 0;
          widgets.push({
            type: 'AmazonMostHelpfulReview',
            data: {
              rating: review.rating,
              author: review.author,
              review: util.stripHtml(review.review),
              title: review.title,
              url: util.url(review.url)
            }
          });
        }
        if ((ref4 = more.reviews) != null ? (ref5 = ref4.quotes) != null ? ref5.length : void 0 : void 0) {
          quotes = [];
          ref7 = (ref6 = more.reviews) != null ? ref6.quotes : void 0;
          for (i = 0, len = ref7.length; i < len; i++) {
            quote = ref7[i];
            quotes.push({
              author: quote.author,
              quote: util.stripHtml(quote.quote),
              url: util.url(quote.url)
            });
          }
          widgets.push({
            type: 'AmazonQuotes',
            data: quotes
          });
        }
        if ((ref8 = more.reviews) != null ? (ref9 = ref8.mostRecent) != null ? ref9.length : void 0 : void 0) {
          reviews = [];
          ref11 = (ref10 = more.reviews) != null ? ref10.mostRecent : void 0;
          for (j = 0, len1 = ref11.length; j < len1; j++) {
            review = ref11[j];
            reviews.push({
              rating: review.rating,
              title: review.title,
              author: review.author,
              review: util.stripHtml(review.review),
              url: util.url(review.url)
            });
          }
          widgets.push({
            type: 'AmazonMostRecentReviews',
            data: reviews
          });
        }
        if (more.details) {
          widgets.push({
            type: 'AmazonDetails',
            data: more.details
          });
        }
        return cb(widgets);
      };
    })(this));
  };
});

//# sourceMappingURL=AmazonProductWidgets.js.map
