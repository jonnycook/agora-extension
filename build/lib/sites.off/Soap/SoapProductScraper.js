// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['scraping/ProductScraper', 'scraping/resourceScrapers/PatternResourceScraper', 'scraping/resourceScrapers/ScriptedResourceScraper', 'scraping/resourceScrapers/JsonResourceScraper', 'scraping/resourceScrapers/DeclarativeResourceScraper', 'underscore'], function(ProductScraper, PatternResourceScraper, ScriptedResourceScraper, JsonResourceScraper, DeclarativeResourceScraper, _) {
  var SoapProductScraper;
  return SoapProductScraper = (function(_super) {
    __extends(SoapProductScraper, _super);

    function SoapProductScraper() {
      return SoapProductScraper.__super__.constructor.apply(this, arguments);
    }

    SoapProductScraper.prototype.parseSid = function(sid) {
      return {};
    };

    SoapProductScraper.prototype.resources = {
      productPage: {
        url: function() {
          return "http://www.soap.com/p/product-" + this.productSid;
        }
      },
      reviewPage: {
        url: function() {
          var str;
          str = this.productSid + '';
          return "http://www.soap.com/amazon_reviews/" + (str.substr(0, 2)) + "/" + (str.substr(2, 2)) + "/" + (str.substr(4)) + "/mosthelpful_Default.html";
        }
      }
    };

    SoapProductScraper.prototype.properties = {
      title: {
        resource: 'productPage',
        scraper: DeclarativeResourceScraper('scraper', 'title')
      },
      image: {
        resource: 'productPage',
        scraper: DeclarativeResourceScraper('scraper', 'image')
      },
      price: {
        resource: 'productPage',
        scraper: DeclarativeResourceScraper('scraper', 'price')
      },
      rating: {
        resource: 'productPage',
        scraper: DeclarativeResourceScraper('scraper', 'rating')
      },
      ratingCount: {
        resource: 'productPage',
        scraper: DeclarativeResourceScraper('scraper', 'ratingCount')
      },
      more: {
        resource: 'productPage',
        scraper: DeclarativeResourceScraper('scraper', 'more')
      },
      reviews: {
        resource: 'reviewPage',
        scraper: DeclarativeResourceScraper('reviews', 'reviews')
      }
    };

    return SoapProductScraper;

  })(ProductScraper);
});

//# sourceMappingURL=SoapProductScraper.map
