// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['scraping/SiteProduct', 'underscore', 'util'], function(SiteProduct, _, util) {
  var FreePeopleProduct;
  return FreePeopleProduct = (function(_super) {
    __extends(FreePeopleProduct, _super);

    function FreePeopleProduct() {
      return FreePeopleProduct.__super__.constructor.apply(this, arguments);
    }

    FreePeopleProduct.prototype.images = function(cb) {
      return this.product["with"]('more', (function(_this) {
        return function(more) {
          var images;
          images = _.mapValues(more.images, function(images) {
            return _.map(images, function(image) {
              return {
                small: image.detailSize,
                medium: image.detailSize,
                large: image.detailSize,
                larger: image.zoomSize,
                full: image.zoomSize
              };
            });
          });
          return cb(images, more.color);
        };
      })(this));
    };

    FreePeopleProduct.prototype.widgets = function(cb) {
      return this.product["with"]('more', (function(_this) {
        return function(more) {
          var widgets;
          widgets = [];
          if (more.description) {
            widgets.push({
              type: 'html',
              data: {
                title: 'Description',
                content: util.stripHtml(more.description)
              }
            });
          }
          if (more.sizingDescription) {
            widgets.push({
              type: 'html',
              data: {
                title: 'Sizing',
                content: util.stripHtml(more.sizingDescription),
                maxHeight: 'none'
              }
            });
          }
          if (more.sizes) {
            widgets.push({
              type: 'List',
              data: {
                title: 'Sizes',
                content: more.sizes
              }
            });
          }
          if (more.colors) {
            widgets.push({
              type: 'List',
              data: {
                title: 'Colors',
                content: _.map(more.colors, function(color) {
                  return color.name;
                })
              }
            });
          }
          return cb(widgets);
        };
      })(this));
    };

    return FreePeopleProduct;

  })(SiteProduct);
});

//# sourceMappingURL=FreePeopleProduct.map
