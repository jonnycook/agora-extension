// Generated by CoffeeScript 1.10.0
var slice = [].slice;

window.tracking = {
  enabled: false,
  page: function(path, params) {
    var name, p, value;
    if (params == null) {
      params = {};
    }
    console.log('tracking page', path);
    if (this.enabled && (typeof ga !== "undefined" && ga !== null) && env.tracking !== false) {
      if (agora.user) {
        agora.updater.transport.ws.send("t" + (agora.user.saneId()) + "\tpage\t" + path);
      }
      p = [];
      for (name in params) {
        value = params[name];
        p.push(name + "=" + value);
      }
      return ga('send', 'pageview', path + '?' + p.join('&'));
    }
  },
  event: function() {
    var args;
    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    console.log('tracking event', args);
    if (this.enabled && (typeof ga !== "undefined" && ga !== null) && env.tracking !== false) {
      if (agora.user) {
        agora.updater.transport.ws.send("t" + (agora.user.saneId()) + "\tevent\t" + (args.join('\t')));
      }
      return ga.apply(null, ['send', 'event'].concat(slice.call(args)));
    }
  },
  time: function(category, variable, time, label) {
    if (label == null) {
      label = null;
    }
    if (this.enabled && (typeof ga !== "undefined" && ga !== null) && env.tracking !== false) {
      if (agora.user) {
        agora.updater.transport.ws.send("t" + (agora.user.saneId()) + "\ttime\t" + category + "\t" + variable + "\t" + time + "\t" + (label != null ? label : ''));
      }
      return ga.apply(null, ['send', 'timing'].concat(slice.call(arguments)));
    }
  }
};

//# sourceMappingURL=tracking.js.map
