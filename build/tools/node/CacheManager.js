// Generated by CoffeeScript 1.10.0
var CacheManager, crypto, fs, md5, path;

fs = require('fs');

path = require('path');

crypto = require('crypto');

md5 = function(str) {
  var md5er;
  md5er = crypto.createHash('md5');
  md5er.update(str);
  return md5er.digest('hex');
};

module.exports = CacheManager = (function() {
  function CacheManager() {}

  CacheManager.prototype.cachePath = function(name) {
    var cacheName;
    cacheName = md5(name);
    return "../cache/" + cacheName;
  };

  CacheManager.prototype.cacheResponse = function(name, response) {
    return fs.writeFile(this.cachePath(name), response);
  };

  CacheManager.prototype.getCachedResponse = function(name) {
    var cachePath;
    cachePath = this.cachePath(name);
    if (path.existsSync(cachePath)) {
      return fs.readFileSync(cachePath, 'utf8');
    } else {
      return null;
    }
  };

  CacheManager.prototype.putThrough = function(opts) {
    var response;
    response = this.getCachedResponse(opts.name);
    if (response) {
      console.log('has cached response for ' + opts.name);
      return opts.cb(response);
    } else {
      console.log("no cache for " + opts.name);
      return opts.get((function(_this) {
        return function(response) {
          _this.cacheResponse(opts.name, response);
          return opts.cb(response);
        };
      })(this));
    }
  };

  return CacheManager;

})();

CacheManager.md5 = md5;

//# sourceMappingURL=CacheManager.js.map
