// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['jQuery', 'Background'], function($, Background) {
  var ScraperBackground;
  return ScraperBackground = (function(_super) {
    __extends(ScraperBackground, _super);

    function ScraperBackground() {
      return ScraperBackground.__super__.constructor.apply(this, arguments);
    }

    ScraperBackground.prototype.getVersion = function() {
      return '0.3.22';
    };

    ScraperBackground.prototype.httpRequest = function(url, opts) {
      return $.ajax(url, {
        type: opts.method,
        data: opts.data,
        dataType: opts.dataType,
        success: function(response, status, xhr) {
          return opts != null ? typeof opts.cb === "function" ? opts.cb(response, {
            status: status,
            header: function(name) {
              return xhr.getResponseHeader(name);
            }
          }) : void 0 : void 0;
        },
        error: function(error) {
          var name, value;
          for (name in error) {
            value = error[name];
            console.log(name, value);
          }
          return opts != null ? typeof opts.error === "function" ? opts.error() : void 0 : void 0;
        }
      });
    };

    ScraperBackground.prototype.require = function(modules, cb) {
      return require(modules, cb);
    };

    ScraperBackground.prototype.setTimeout = function(cb, duration) {
      return setTimeout(cb, duration);
    };

    ScraperBackground.prototype.clearTimeout = function(id) {
      return clearTimeout(id);
    };

    ScraperBackground.prototype.setInterval = function(func, time) {
      return setInterval(func, time);
    };

    ScraperBackground.prototype.clearInterval = function(id) {
      return clearInterval(id);
    };

    ScraperBackground.prototype.getValue = function(name) {
      return window[name];
    };

    ScraperBackground.prototype.setValue = function(name, value) {
      return window[name] = value;
    };

    ScraperBackground.prototype.defaultValue = function(name, value) {
      return window[name] != null ? window[name] : window[name] = value;
    };

    ScraperBackground.prototype.getCookie = function(domain, name, cb) {
      return cb();
    };

    ScraperBackground.prototype.getResourceUrl = function(resource) {
      return "/view/" + resource;
    };

    ScraperBackground.prototype.storage = {};

    ScraperBackground.prototype.getStorage = function(fields, cb) {
      return cb(this.storage);
    };

    ScraperBackground.prototype.setStorage = function(values) {
      var field, value, _results;
      _results = [];
      for (field in values) {
        value = values[field];
        _results.push(this.storage[field] = value);
      }
      return _results;
    };

    ScraperBackground.prototype.removeStorage = function(fields) {
      var field, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = fields.length; _i < _len; _i++) {
        field = fields[_i];
        _results.push(delete this.storage[field]);
      }
      return _results;
    };

    return ScraperBackground;

  })(Background);
});

//# sourceMappingURL=ScraperBackground.map
