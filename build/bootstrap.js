// Generated by CoffeeScript 1.10.0
var reloadModules, reloadStyles,
  slice = [].slice;

if (!document.location.href.match('^http:\/\/agora\.dev') && !document.location.href.match('^http:\/\/baggg\.it') && !document.location.href.match('^http:\/\/agoraext\.dev')) {
  chrome.extension.sendMessage('getScript', function(script) {
    if (script) {
      return eval(script);
    }
  });
  chrome.runtime.onMessage.addListener(function(request) {
    var className, define, module, name, ref;
    if (request === 'needsReload') {
      return siteInjector.onOldVersion();
    } else if (request === 'startContentClipping') {
      if (window.siteInjector) {
        return siteInjector.startContentClipping();
      } else {
        window.onAgoraInit = function() {
          return siteInjector.startContentClipping();
        };
        return chrome.extension.sendMessage('init');
      }
    } else if (request === 'toggle') {
      if (window.siteInjector) {
        return siteInjector.toggle();
      } else {
        return chrome.extension.sendMessage('init');
      }
    } else if (request.action === 'updateCode') {
      name = request.module.match('/?([^/]*)$')[1];
      className = (ref = request.className) != null ? ref : name;
      module = null;
      define = function(func) {
        return module = func();
      };
      with (__classes) {
				eval(request.code);

				var obj;
				if (module.c) obj = module.c;
				else obj = module;
			
				window[className] = __classes[className] = obj();
			};
      return null;
    }
  });
}

reloadStyles = function() {
  return chrome.extension.sendMessage("getStyles", function(styles) {
    var stylesheet;
    stylesheet = document.getElementById("agoraStylesheet");
    stylesheet.parentNode.removeChild(stylesheet);
    stylesheet = document.createElement("style");
    stylesheet.id = "agoraStylesheet";
    stylesheet.setAttribute("type", "text/css");
    stylesheet.setAttribute("rel", "stylesheet");
    stylesheet.innerHTML = styles;
    return document.head.appendChild(stylesheet);
  });
};

reloadModules = function() {
  var modules;
  modules = 1 <= arguments.length ? slice.call(arguments, 0) : [];
  return chrome.runtime.sendMessage({
    action: 'reloadModules',
    modules: modules
  });
};

//# sourceMappingURL=bootstrap.js.map
